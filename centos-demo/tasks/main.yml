---
# tasks file for centos-demo
#
#
#############################

- name: running pre-conversion checks
  block:
    - name: checking that machine is running CentOS
      assert:
        that: "ansible_distribution == 'CentOS'"
        msg: "Target machine must be running CentOS to convert. This machine is running {{ ansible_distribution }}"
    - name: checking conversion_method is defined
      assert:
        that: "conversion_method is defined"
        msg: "Please define a conversion method. Acceptable values are satellite or RHN"

    - name: checking values are defined for conversion via satellite
      assert:
        that:
          - "activation_key is defined"
          - "organisation is defined"
          - "satellite_fqdn is defined"
        msg: "Please ensure all variables for conversion by satellite are defined: activation_key organisation satellite_fqdn"
      when: conversion_method == "satellite"

    - name: checking values are defined for conversion by RHN
      assert:
        that:
          - "rhsm_username is defined"
          - "rhsm_password is defined"
          - "rhsm_pool is defined"
        msg: "Please ensure all variables for conversion by RHN are defined: rhsm_username rhsm_password rhsm_pool"
      when: conversion_method == "RHN"
    - name: checking machine architecture
      assert:
        that: "ansible_architecture == 'x86_64'"
        msg: " Target machine architecture has to be x86_64. This machine is running {{ ansible_architecture }}"




- name: configure repos
  block:
    - name: configure yum repos - comment out mirrorlist
      shell: "sed -i 's/^mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*"
    - name: configure yum repos - change baseurl
      shell: "sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*"
  when: repoconfig_bool == True  

- name: download red hat gpg key
  get_url:
    dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
    url: "https://www.redhat.com/security/data/fd431d51.txt"

- name: download SSL cert for Red Hat CDN
  get_url:
    dest: "/etc/rhsm/ca/redhat-uep.pem"
    url: " https://ftp.redhat.com/redhat/convert2rhel/redhat-uep.pem"

- name: add the convert2rhel repo
  get_url:
    dest: "/etc/yum.repos.d/convert2rhel.repo"
    url: "https://ftp.redhat.com/redhat/convert2rhel/{{ ansible_distribution_major_version }}/convert2rhel.repo"

- name: detect and set supported kernel
  vars:
    kernel_package: "{{ 'supported_kernel' }}.{{ 'ansible_distribution_version' }}"
  debug:
    var: kernel_package

- name: ensure supported kernel is installed
  yum:
    name: "{{ kernel_package }}"
    state: present
  notify: reboot_system
  when: upgrade_bool == True    

- name: install convert2rhel utility
  yum:
    name: "convert2rhel"
    state: latest

- name: upgrade all packages
  yum:
    name: '*'
    state: latest
  notify: update_repos
  when: upgrade_bool == True    

- name: disable convert2rhel repo (this avoids a bug in convert2rhel tool)
  lineinfile:
    path: /etc/yum.repos.d/convert2rhel.repo
    regexp: "enabled = 1"
    line: "enabled = 0"
    state: present

- name: check if reboot required
  meta: flush_handlers

- name: perform conversion using Red Hat Satellite
  block:
    - name: download consumer rpm from satellite server
      get_url:
        dest: "/usr/share/convert2rhel/subscription-manager/katello-ca-consumer-latest.noarch.rpm"
        url: https://{{satellite_fqdn}}/pub/katello-ca-consumer-latest.noarch.rpm
        validate_certs: false

    - name: create config file for convert2rhel
      template:
        src: config.ini.j2
        dest: "/usr/share/convert2rhel/config.ini"
        mode: 0600

    - name: converting to RHEL (min. 20 mins)
      command: convert2rhel --org {{organisation}} --config-file /usr/share/convert2rhel/config.ini -y
      notify: reboot_system
  when: reboot_bool == True and conversion_method == "satellite"

- name: perform conversion using RHN
  command: convert2rhel -u {{ rhsm_username }} -p {{ rhsm_password }} --pool {{ rhsm_pool }} -y
  notify: reboot_system
  when: reboot_bool == True and conversion_method == "RHN"
